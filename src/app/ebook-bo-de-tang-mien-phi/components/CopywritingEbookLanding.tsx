'use client';

import { useState } from 'react';
import Image from 'next/image';
import { CheckCircleIcon, StarIcon, AcademicCapIcon, TrophyIcon, ArrowUpIcon } from '@heroicons/react/24/solid';
import Header from '../../components/Header';

export default function CopywritingEbookLanding() {
  const [formData, setFormData] = useState({
    name: '',
    email: ''
  });
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [errors, setErrors] = useState<{name?: string; email?: string}>({});
  const [submitStatus, setSubmitStatus] = useState<{
    type: 'success' | 'error' | null;
    message: string;
  }>({ type: null, message: '' });
  const [showModal, setShowModal] = useState(false);

  const validateForm = () => {
    const newErrors: {name?: string; email?: string} = {};
    
    if (!formData.name.trim() || formData.name.trim().length < 2) {
      newErrors.name = 'T√™n ph·∫£i c√≥ √≠t nh·∫•t 2 k√Ω t·ª±';
    }
    
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!formData.email.trim() || !emailRegex.test(formData.email)) {
      newErrors.email = 'Email kh√¥ng h·ª£p l·ªá';
    }
    
    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!validateForm()) return;
    
    setIsSubmitting(true);
    setSubmitStatus({ type: null, message: '' });
    
    try {
      const response = await fetch('/api/copywriting-ebook/submit', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          name: formData.name.trim(),
          email: formData.email.trim(),
        }),
      });

      const data = await response.json();

      if (!response.ok) {
        throw new Error(data.error || 'C√≥ l·ªói x·∫£y ra');
      }

      // Show success modal
      setShowModal(true);
      
      // Reset form and states
      setFormData({ name: '', email: '' });
      setSubmitStatus({ type: null, message: '' });
      setIsSubmitting(false);
      
    } catch (error) {
      const errorMessage = error instanceof Error ? error.message : 'C√≥ l·ªói x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i!';
      
      setSubmitStatus({
        type: 'error',
        message: errorMessage
      });
      
      setIsSubmitting(false);
    }
  };

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
    
    // Clear error when user starts typing
    if (errors[name as keyof typeof errors]) {
      setErrors(prev => ({ ...prev, [name]: undefined }));
    }
  };

  const scrollToTop = () => {
    window.scrollTo({ top: 0, behavior: 'smooth' });
  };

  return (
    <>
      {/* Success Modal */}
      {showModal && (
        <div className="fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50 p-4 animate-fade-in">
          <div className="bg-gradient-to-br from-blue-prime/90 to-blue-prime/80 backdrop-blur-xl border border-baillearn-yellow/30 rounded-2xl p-8 max-w-2xl w-full max-h-[90vh] overflow-y-auto shadow-2xl animate-scale-up">
            <div className="text-center">
              <h2 className="text-2xl font-bold text-baillearn-yellow mb-4">C·∫£m ∆°n b·∫°n</h2>
              
              <div className="text-left space-y-4 text-white/90">
                <p>B·∫°n s·∫Ω s·ªõm nh·∫≠n ƒë∆∞·ª£c email v·ªõi ti√™u ƒë·ªÅ l√†:</p>
                <p className="font-bold text-baillearn-yellow bg-white/10 backdrop-blur-sm p-3 rounded-lg border border-baillearn-yellow/30">
                  &ldquo;QUAN TR·ªåNG: X√°c minh email c·ªßa b·∫°n&rdquo;
                </p>
                
                <p>B·∫°n b·∫Øt bu·ªôc ph·∫£i m·ªü email ƒë√≥ v√† b·∫•m <span className="font-bold text-baillearn-yellow">&ldquo;X√°c minh email ngay&rdquo;</span> ƒë·ªÉ nh·∫≠n B·ªô ƒë·ªÅ th·ª±c chi·∫øn ƒêGNL HCM 2026 mi·ªÖn ph√≠ t·ª´ b·ªçn m√¨nh.</p>
                
                <p>M√¨nh s·∫Ω ch·ªâ li√™n h·ªá qua email b·∫°n ƒë√£ d√πng ƒë·ªÉ ƒëƒÉng k√Ω n√™n h√£y ki·ªÉm tra inbox nh√©.</p>
                
                <p>N·∫øu b·∫°n kh√¥ng th·∫•y email th√¨ h√£y ki·ªÉm tra k·ªπ h√≤m th∆∞ <span className="font-bold text-baillearn-yellow">SPAM & QU·∫¢NG C√ÅO</span>.</p>
                
                <p>N·∫øu b·∫°n kh√¥ng nh·∫≠n ƒë∆∞·ª£c mail confirm trong v√≤ng 10 ph√∫t, ho·∫∑c c√≥ b·∫•t k·ª≥ c√¢u h·ªèi n√†o cho b·ªçn m√¨nh...</p>
                
                <p>H√£y li√™n h·ªá b·ªçn m√¨nh t·∫°i ƒë·ªãa ch·ªâ mail: <span className="font-bold text-baillearn-yellow">bai.learner@bailearn.vn</span></p>
                
                <p className="font-bold text-white">C·∫£m ∆°n b·∫°n r·∫•t nhi·ªÅu!</p>
              </div>
              
              <button
                onClick={() => setShowModal(false)}
                className="mt-6 bg-baillearn-yellow text-gray-900 px-6 py-3 rounded-lg font-bold hover:bg-yellow-400 hover:scale-105 transition-all duration-300"
              >
                ƒê√£ hi·ªÉu
              </button>
            </div>
          </div>
        </div>
      )}

      <style jsx>{`
        @keyframes fade-in {
          from {
            opacity: 0;
          }
          to {
            opacity: 1;
          }
        }
        
        @keyframes scale-up {
          from {
            opacity: 0;
            transform: scale(0.9);
          }
          to {
            opacity: 1;
            transform: scale(1);
          }
        }
        
        .animate-fade-in {
          animation: fade-in 0.3s ease-out;
        }
        
        .animate-scale-up {
          animation: scale-up 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
        }
      `}</style>

      <div className="min-h-screen relative overflow-hidden bg-gradient-to-br from-blue-prime via-blue-prime/80 to-blue-prime/60">
      {/* Animated background elements */}
      <div className="absolute inset-0">
        <div className="absolute top-20 left-10 w-72 h-72 bg-baillearn-yellow/10 rounded-full blur-3xl animate-pulse"></div>
        <div className="absolute bottom-20 right-10 w-96 h-96 bg-white/5 rounded-full blur-3xl animate-pulse delay-1000"></div>
        <div className="absolute top-1/2 left-1/2 w-96 h-96 bg-baillearn-yellow/5 rounded-full blur-3xl animate-pulse delay-500"></div>
      </div>

      <div className="relative z-10">
        <Header />

        {/* Main Content */}
        <div className="px-6 py-16">
          <div className="max-w-7xl mx-auto">
            <div className="grid lg:grid-cols-2 gap-12 items-start">
              {/* Left Column - Content */}
              <div className="space-y-8">
                {/* Main Headline */}
                <div className="animate-fade-in">
                  <p className="text-white/90 text-lg mb-4 font-inter italic">
                    ‚ú® D√†nh cho c√°c sƒ© t·ª≠ 2k8 mu·ªën t·ªëi ƒëa h√≥a c∆° h·ªôi v√†o c√°c tr∆∞·ªùng ƒë·∫°i h·ªçc m∆° ∆∞·ªõc‚Ä¶
                  </p>
                  
                  <h1 className="text-3xl md:text-4xl lg:text-5xl font-bold leading-tight font-inter">
                    <span className="text-white font-bold font-inter">B·ªô ƒë·ªÅ 5 th·ª±c chi·∫øn </span>
                    <span className="text-baillearn-yellow font-bold font-inter drop-shadow-lg">ƒêGNL HCM 2026 </span>
                    <span className="text-white font-bold font-inter">chu·∫©n form </span>
                  </h1>
                  
                  <p className="text-white/90 text-lg mt-3 font-inter leading-relaxed">
                    c√≥ ƒë√°p √°n v√† tr√≠ch d·∫´n chi ti·∫øt t·ª´ th·ªß khoa c√≥ ƒëi·ªÉm ƒêGNL cao nh·∫•t l·ªãch s·ª≠
                  </p>
                </div>

                {/* Key Benefits */}
                <div className="space-y-4">
                  {[
                    {
                      icon: 'üëâ',
                      text: 'Ho√†n to√†n mi·ªÖn ph√≠, kh√¥ng c·∫ßn lo "m·∫•t ph√≠ ·∫©n".',
                      highlight: 'mi·ªÖn ph√≠'
                    },
                    {
                      icon: 'üëâ',
                      text: 'ƒê·ªÅ b√°m s√°t c·∫•u tr√∫c ch√≠nh th·ª©c - kh√¥ng lo h·ªçc l·ªách, h·ªçc thi·∫øu.',
                      highlight: 'c·∫•u tr√∫c ch√≠nh th·ª©c'
                    },
                    {
                      icon: 'üëâ',
                      text: 'Tr√≠ch d·∫´n t·ª´ th·ªß khoa, gi√∫p b·∫°n hi·ªÉu c√°ch t∆∞ duy gi·∫£i quy·∫øt ch·ª© kh√¥ng ch·ªâ ch·ªçn ƒë√∫ng ƒë√°p √°n.',
                      highlight: 'c√°ch t∆∞ duy'
                    }
                  ].map((benefit, index) => (
                    <div key={index} className="flex items-start gap-3 p-3">
                      <span className="text-baillearn-yellow text-2xl">{benefit.icon}</span>
                      <span className="text-white/90 font-inter leading-relaxed text-lg">{benefit.text}</span>
                    </div>
                  ))}
                </div>

                {/* Form Section - Right under content */}
                <div className="mt-8">
                  <div className="bg-gradient-to-br from-white/20 to-white/10 backdrop-blur-lg rounded-2xl p-8 border border-white/30 shadow-2xl">
                    <h3 className="text-white text-xl font-bold mb-4 text-center">üéØ Nh·∫≠n B·ªô ƒê·ªÅ Ngay!</h3>
                    <form onSubmit={handleSubmit} className="space-y-5">
                      {/* Name Input */}
                      <div>
                        <input
                          type="text"
                          id="name"
                          name="name"
                          value={formData.name}
                          onChange={handleInputChange}
                          placeholder="T√™n c·ªßa b·∫°n"
                          className={`w-full px-5 py-4 rounded-xl bg-white/95 border-2 font-inter text-gray-900 shadow-sm
                            ${errors.name ? 'border-red-400' : 'border-transparent'} 
                            focus:border-baillearn-yellow focus:outline-none focus:shadow-lg transition-all duration-300`}
                        />
                        {errors.name && (
                          <p className="text-red-300 text-sm font-inter mt-1">{errors.name}</p>
                        )}
                      </div>

                      {/* Email Input */}
                      <div>
                        <input
                          type="email"
                          id="email"
                          name="email"
                          value={formData.email}
                          onChange={handleInputChange}
                          placeholder="Email th∆∞·ªùng d√πng nh·∫•t c·ªßa b·∫°n"
                          className={`w-full px-5 py-4 rounded-xl bg-white/95 border-2 font-inter text-gray-900 shadow-sm
                            ${errors.email ? 'border-red-400' : 'border-transparent'} 
                            focus:border-baillearn-yellow focus:outline-none focus:shadow-lg transition-all duration-300`}
                        />
                        {errors.email && (
                          <p className="text-red-300 text-sm font-inter mt-1">{errors.email}</p>
                        )}
                      </div>

                      {/* Status Message */}
                      {submitStatus.type && (
                        <div className={`p-4 rounded-lg ${
                          submitStatus.type === 'success'
                            ? 'bg-green-500/20 border border-green-400 text-green-100'
                            : 'bg-red-500/20 border border-red-400 text-red-100'
                        }`}>
                          <div className="flex items-center gap-2">
                            {submitStatus.type === 'success' ? (
                              <CheckCircleIcon className="w-5 h-5 text-green-400" />
                            ) : (
                              <svg className="w-5 h-5 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.5 0L4.334 18.5c-.77.833-.23 2.5 1.732 2.5z" />
                              </svg>
                            )}
                            <span className="font-inter text-sm">{submitStatus.message}</span>
                          </div>
                        </div>
                      )}

                      {/* Submit Button */}
                      <button
                        type="submit"
                        disabled={isSubmitting || submitStatus.type === 'success'}
                        className={`w-full py-5 px-6 rounded-xl font-bold font-inter text-lg transition-all duration-300 transform hover:scale-105 shadow-lg
                          ${submitStatus.type === 'success'
                            ? 'bg-green-500 text-white cursor-default'
                            : 'bg-gradient-to-r from-baillearn-yellow via-yellow-400 to-baillearn-yellow text-gray-900 hover:from-yellow-400 hover:via-baillearn-yellow hover:to-yellow-400'
                          }
                          ${(isSubmitting || submitStatus.type === 'success') ? 'opacity-75 cursor-not-allowed' : ''}
                        `}
                      >
                        {submitStatus.type === 'success' ? (
                          <div className="flex items-center justify-center gap-2">
                            <CheckCircleIcon className="w-5 h-5" />
                            ƒêang chuy·ªÉn h∆∞·ªõng...
                          </div>
                        ) : isSubmitting ? (
                          <div className="flex items-center justify-center gap-2">
                            <div className="w-5 h-5 border-2 border-gray-600 border-t-transparent rounded-full animate-spin"></div>
                            ƒêang x·ª≠ l√Ω...
                          </div>
                        ) : (
                          'üéÅ NH·∫¨N B·ªò ƒê·ªÄ TH·ª∞C CHI·∫æN ‚Äì ƒêGNL HCM 2026 MI·ªÑN PH√ç'
                        )}
                      </button>
                    </form>
                  </div>
                </div>
              </div>

              {/* Right Column - Ebook Cover Image */}
              <div className="relative lg:sticky lg:top-8">
                <div className="relative">
                  <Image
                    src="/bia-sach.png"
                    alt="B·ªô ƒê·ªÅ Th·ª±c Chi·∫øn ƒêGNL HCM 2026"
                    width={600}
                    height={800}
                    className="w-full h-auto shadow-2xl rounded-xl"
                    priority
                  />
                  {/* Glow effect behind image */}
                  <div className="absolute -inset-6 bg-gradient-to-r from-baillearn-yellow/30 via-baillearn-yellow/20 to-baillearn-blue/30 rounded-2xl blur-2xl opacity-75 animate-pulse -z-10"></div>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Teachers Section */}
        <section className="px-6 py-20 bg-gradient-to-b from-white/10 to-white/5 backdrop-blur-sm">
          <div className="max-w-7xl mx-auto">
            <h2 className="text-3xl md:text-4xl font-bold text-center text-white mb-12 font-inter">
              <TrophyIcon className="w-10 h-10 text-baillearn-yellow inline-block mr-2" />
              ƒê∆∞·ª£c bi√™n so·∫°n tr·ª±c ti·∫øp b·ªüi nh·ªØng &ldquo;cao th·ªß&rdquo; t·ª´ng l√†m n√™n k·ª∑ l·ª•c ·ªü k·ª≥ thi ƒêGNL
            </h2>
            
            <div className="grid md:grid-cols-2 gap-12 items-center mb-12">
              {/* Left - Image */}
              <div className="flex justify-center">
                <div className="relative">
                  <Image
                    src="/haivabao.png"
                    alt="Th·ªß khoa ƒêGNL"
                    width={500}
                    height={400}
                    className="rounded-xl shadow-2xl"
                  />
                </div>
              </div>
              
              {/* Right - Content */}
              <div className="space-y-6 text-white">
                <div className="bg-white/10 backdrop-blur rounded-xl p-6 border border-white/20">
                  <p className="font-inter text-lg leading-relaxed">
                    <StarIcon className="w-5 h-5 text-baillearn-yellow inline mr-2" />
                    <span className="font-bold text-baillearn-yellow text-xl">Phan L√™ Th√∫c B·∫£o:</span>
                    <br />
                    <span className="text-white/90">2 l·∫ßn Th·ªß khoa V-ACT. K·ª∑ l·ª•c ƒëi·ªÉm s·ªë cao nh·∫•t l·ªãch s·ª≠ k√¨ thi ƒêGNL HCM v·ªõi <span className="text-2xl font-bold text-baillearn-yellow">1133 ƒëi·ªÉm</span> - cho ƒë·∫øn nay v·∫´n ch∆∞a c√≥ th√≠ sinh n√†o v∆∞·ª£t qua.</span>
                  </p>
                </div>
                
                <div className="bg-white/10 backdrop-blur rounded-xl p-6 border border-white/20">
                  <p className="font-inter text-lg leading-relaxed">
                    <StarIcon className="w-5 h-5 text-baillearn-yellow inline mr-2" />
                    <span className="font-bold text-baillearn-yellow text-xl">Tr·∫ßn Ph∆∞·ªõc H·∫£i:</span>
                    <br />
                    <span className="text-white/90">4 l·∫ßn ƒë·∫°t ƒëi·ªÉm tr√™n <span className="text-xl font-bold text-baillearn-yellow">1000+</span> v·ªõi k·ª≥ thi V-ACT. √Å Khoa kh·ªëi A00 - TP ƒê√† N·∫µng</span>
                  </p>
                </div>
                
                <div className="bg-white/10 backdrop-blur rounded-xl p-6 border border-white/20">
                  <p className="font-inter text-lg leading-relaxed text-white/90">
                    üí° Sau m·ªói ƒë·ªÅ, b·∫°n s·∫Ω nh√¨n th·∫•y r√µ <span className="text-baillearn-yellow font-semibold">ƒëi·ªÉm m·∫°nh & ƒëi·ªÉm y·∫øu</span> c·ªßa m√¨nh ƒë·ªÉ ƒëi·ªÅu ch·ªânh k·ªãp th·ªùi v√† quan tr·ªçng nh·∫•t: c√†ng l√†m nhi·ªÅu, b·∫°n s·∫Ω c√†ng b·ªõt run, b·ªõt lo v√† t·ª± tin h∆°n trong k·ª≥ thi s·∫Øp t·ªõi.
                  </p>
                </div>
              </div>
            </div>

            {/* Story Content */}
            <div className="mt-20 max-w-4xl mx-auto">
              <div className="bg-gradient-to-br from-white/10 to-white/5 backdrop-blur rounded-2xl p-10 border border-white/20">
                <div className="space-y-4 text-white/90">
                  <p className="font-inter text-lg leading-relaxed">
                    üí≠ M√¨nh ·ªü ƒë√¢y ƒë·ªÉ n√≥i v·ªõi b·∫°n r·∫±ng, ch√∫ng m√¨nh c≈©ng t·ª´ng gi·ªëng nh∆∞ b·∫°n‚Ä¶
                  </p>
                  
                  <p className="font-inter text-lg leading-relaxed">
                    üìö C√†ng √¥n c√†ng th·∫•y ki·∫øn th·ª©c m√™nh m√¥ng, kh√¥ng bi·∫øt m√¨nh ƒë√£ √¥n ƒë√∫ng tr·ªçng t√¢m hay v·∫´n ƒëang l·∫°c h∆∞·ªõng.
                  </p>
                  
                  <p className="font-inter text-lg leading-relaxed">
                    üò∞ C√†ng ƒë·∫øn g·∫ßn ng√†y thi, c·∫£m gi√°c thi·∫øu t·ª± tin c√†ng l·ªõn: l·ª° ƒë√¢u ƒë·ªÅ thi r∆°i tr√∫ng ph·∫ßn m√¨nh ch∆∞a ch·∫°m t·ªõi th√¨ sao?
                  </p>
                  
                  <p className="font-inter text-xl leading-relaxed font-bold text-white bg-gradient-to-r from-baillearn-yellow to-yellow-400 bg-clip-text text-transparent">
                    ‚ú® Nh∆∞ng b·∫±ng m·ªôt ph∆∞∆°ng ph√°p ƒë·∫∑c bi·ªát.
                  </p>
                  
                  <p className="font-inter text-lg leading-relaxed">
                    üéØ BaiLearn v√† c√°c b·∫°n h·ªçc vi√™n ƒë√£ b·ª©t ph√° v√† ƒë·∫°t ƒë∆∞·ª£c nh·ªØng th√†nh t√≠ch ngo·∫°n m·ª•c trong k·ª≥ thi V-ACT 2025.
                  </p>
                </div>
              </div>
            </div>
          </div>
        </section>

        {/* Achievements Gallery */}
        <section className="px-6 py-20">
          <div className="max-w-7xl mx-auto">
            <h2 className="text-3xl md:text-4xl font-bold text-center text-white mb-3 font-inter">
              <AcademicCapIcon className="w-10 h-10 text-baillearn-yellow inline-block mr-2" />
              Th√†nh T√≠ch N·ªïi B·∫≠t
            </h2>
            <p className="text-center text-white/70 mb-12 text-lg">Nh·ªØng k·∫øt qu·∫£ th·ª±c t·∫ø t·ª´ h·ªçc vi√™n BaiLearn</p>
            
            <div className="grid grid-cols-2 md:grid-cols-4 gap-6">
              {[1, 2, 3, 4, 5, 6, 7, 8].map((num) => (
                <div key={num} className="relative overflow-hidden rounded-xl shadow-2xl">
                  <Image
                    src={`/achi${num}.png`}
                    alt={`Th√†nh t√≠ch h·ªçc vi√™n ${num}`}
                    width={300}
                    height={400}
                    className="w-full h-auto"
                  />
                </div>
              ))}
            </div>
          </div>
        </section>

        {/* Final CTA Section */}
        <section className="px-6 py-12 bg-white/5">
          <div className="max-w-3xl mx-auto text-center">
            <h2 className="text-2xl font-bold text-white mb-3 font-inter">
              V·∫≠y cu·ªën ebook n√†y c√≥ g√¨ m√† BaiLearn tin b·∫°n s·∫Ω c·∫ßn?
            </h2>
            
            <p className="text-white/90 mb-6 font-inter">
              ƒê√¢y s·∫Ω l√† nh·ªØng b√†i test th·∫≠t gi√∫p b·∫°n bi·∫øt r√µ m√¨nh ƒëang ·ªü ƒë√¢u, thi·∫øu nh·ªØng g√¨ ƒë·ªÉ t·ª´ ƒë√≥ √¥n ƒë√∫ng tr·ªçng t√¢m, n·∫Øm ch·∫Øc ki·∫øn th·ª©c v√† t·ª± tin b∆∞·ªõc v√†o k·ª≥ thi.
            </p>
            
            <div className="mb-6">
              <h3 className="text-baillearn-yellow mb-3 font-inter font-semibold">
                Cu·ªën s√°ch &ldquo;Th·ª±c chi·∫øn ƒë·ªÅ thi ‚Äì ƒêGNL HCM&rdquo; ƒë∆∞·ª£c bi√™n so·∫°n d√†nh ri√™ng cho c√°c b·∫°n 2k8 bao g·ªìm:
              </h3>
              
              <div className="space-y-2 text-left max-w-xl mx-auto text-sm">
                <div className="flex gap-2">
                  <CheckCircleIcon className="w-4 h-4 text-baillearn-yellow flex-shrink-0 mt-0.5" />
                  <span className="text-white">5 ƒë·ªÅ th·ª±c chi·∫øn, chu·∫©n form ƒë·ªÅ thi th·∫≠t - kh·ªèi lo √¥n lan man, b·ªè s√≥t b·∫•t k√¨ ph·∫ßn n√†o</span>
                </div>
                
                <div className="flex gap-2">
                  <CheckCircleIcon className="w-4 h-4 text-baillearn-yellow flex-shrink-0 mt-0.5" />
                  <span className="text-white">L·ªùi gi·∫£i c·ª±c chi ti·∫øt, r√µ r√†ng - gi√∫p b·∫°n t·ª± check v√† s·ª≠a l·ªói nhanh, kh√¥ng c·∫ßn m·∫•t th·ªùi gian m√≤ ƒë√°p √°n tr√™n m·∫°ng</span>
                </div>
                
                <div className="flex gap-2">
                  <CheckCircleIcon className="w-4 h-4 text-baillearn-yellow flex-shrink-0 mt-0.5" />
                  <span className="text-white">Luy·ªán t·∫≠p k·ªπ nƒÉng ph√¢n b·ªï th·ªùi gian - v√† th·ª≠ c√°c chi·∫øn l∆∞·ª£c l√†m b√†i ƒë·ªÉ t·ª± tin h∆°n khi b∆∞·ªõc v√†o ph√≤ng thi</span>
                </div>
              </div>
            </div>
            
            <div>
              <h3 className="text-lg font-bold text-white mb-3 font-inter">
                Nh·∫≠n B·ªô 5 ƒê·ªÅ Th·ª±c Chi·∫øn ƒêGNL HCM 2026
              </h3>
              
              <button
                onClick={scrollToTop}
                className="inline-flex items-center gap-2 bg-baillearn-yellow text-gray-900 px-6 py-3 rounded-lg font-bold hover:bg-yellow-400 transition-colors"
              >
                üì• T·∫¢I EBOOK MI·ªÑN PH√ç
                <ArrowUpIcon className="w-4 h-4" />
              </button>
            </div>
          </div>
        </section>

        {/* Footer */}
        <footer className="px-6 py-8 border-t border-white/20">
          <div className="max-w-7xl mx-auto text-center">
            <div className="text-2xl font-bold text-white mb-4 font-roboto-flex">
              <span className="text-baillearn-yellow">Bai</span>Learn
            </div>
            <p className="text-white/60 text-sm font-inter">
              ¬© 2025 BaiLearn. All rights reserved. | &ldquo;H·ªçc ƒë·ªÉ hi·ªÉu - Hi·ªÉu ƒë·ªÉ s√°ng t·∫°o&rdquo;
            </p>
          </div>
        </footer>
        </div>
      </div>
    </>
  );
}